name: Automated Business Operations

on:
  schedule:
    # Weekly Services - Every Monday at 6:00 AM UTC
    - cron: '0 6 * * 1'
    # Employee Payouts - Every Friday at 9:00 AM UTC
    - cron: '0 9 * * 5'
    # Employee Recruitment - Every Monday at 10:00 AM UTC
    - cron: '0 10 * * 1'
    # Customer Acquisition - Every Tuesday at 11:00 AM UTC
    - cron: '0 11 * * 2'
    # Business Intelligence - Every Monday at 12:00 PM UTC
    - cron: '0 12 * * 1'
  workflow_dispatch:
    inputs:
      job_type:
        description: 'Type of job to run'
        required: true
        default: 'weekly-services'
        type: choice
        options:
        - weekly-services
        - employee-payouts
        - employee-recruitment
        - customer-acquisition
        - business-intelligence

jobs:
  weekly-services:
    if: github.event.schedule == '0 6 * * 1' || github.event.inputs.job_type == 'weekly-services'
    runs-on: ubuntu-latest
    steps:
      - name: Create Weekly Services
        run: |
          echo "🔄 Creating weekly services..."
          curl -X POST ${{ secrets.VERCEL_URL }}/api/cron/create-weekly-services \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            --max-time 300
          echo "✅ Weekly services creation completed"

  employee-payouts:
    if: github.event.schedule == '0 9 * * 5' || github.event.inputs.job_type == 'employee-payouts'
    runs-on: ubuntu-latest
    steps:
      - name: Process Employee Payouts
        run: |
          echo "💰 Processing employee payouts..."
          curl -X POST ${{ secrets.VERCEL_URL }}/api/cron/process-employee-payouts \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            --max-time 300
          echo "✅ Employee payouts processed"

  employee-recruitment:
    if: github.event.schedule == '0 10 * * 1' || github.event.inputs.job_type == 'employee-recruitment'
    runs-on: ubuntu-latest
    steps:
      - name: Automated Employee Recruitment
        run: |
          echo "👥 Running automated employee recruitment..."
          curl -X POST ${{ secrets.VERCEL_URL }}/api/cron/automated-employee-recruitment \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            --max-time 300
          echo "✅ Employee recruitment completed"

  customer-acquisition:
    if: github.event.schedule == '0 11 * * 2' || github.event.inputs.job_type == 'customer-acquisition'
    runs-on: ubuntu-latest
    steps:
      - name: Automated Customer Acquisition
        run: |
          echo "🎯 Running automated customer acquisition..."
          curl -X POST ${{ secrets.VERCEL_URL }}/api/cron/automated-customer-acquisition \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            --max-time 300
          echo "✅ Customer acquisition completed"

  business-intelligence:
    if: github.event.schedule == '0 12 * * 1' || github.event.inputs.job_type == 'business-intelligence'
    runs-on: ubuntu-latest
    steps:
      - name: Business Intelligence
        run: |
          echo "📊 Generating business intelligence report..."
          curl -X POST ${{ secrets.VERCEL_URL }}/api/cron/business-intelligence \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            --max-time 300
          echo "✅ Business intelligence report generated"

  notify-success:
    needs: [weekly-services, employee-payouts, employee-recruitment, customer-acquisition, business-intelligence]
    if: always() && (needs.weekly-services.result == 'success' || needs.employee-payouts.result == 'success' || needs.employee-recruitment.result == 'success' || needs.customer-acquisition.result == 'success' || needs.business-intelligence.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - name: Notify Success
        run: |
          echo "🎉 Automated business operations completed successfully!"
          echo "📅 Job executed at: $(date)"
          echo "🔗 Vercel URL: ${{ secrets.VERCEL_URL }}"

  notify-failure:
    needs: [weekly-services, employee-payouts, employee-recruitment, customer-acquisition, business-intelligence]
    if: always() && (needs.weekly-services.result == 'failure' || needs.employee-payouts.result == 'failure' || needs.employee-recruitment.result == 'failure' || needs.customer-acquisition.result == 'failure' || needs.business-intelligence.result == 'failure')
    runs-on: ubuntu-latest
    steps:
      - name: Notify Failure
        run: |
          echo "❌ Some automated business operations failed!"
          echo "📅 Job executed at: $(date)"
          echo "🔗 Vercel URL: ${{ secrets.VERCEL_URL }}"
          echo "📋 Check the logs above for details" 